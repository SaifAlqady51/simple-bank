name: ci-test

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple-bank
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Build
        run: go build -v ./...

      - name: Install go-lang migrat
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/migrate
          which migrate

      - name: Run migrations
        run: make migrateup

      - name: "Create env file"
        run: |
          touch app.env
          echo DB_DRIVER=${{secrets.DB_DRIVER}} >> app.env
          echo DB_SOURCE=${{secrets.DB_SOURCE}} >> app.env
          echo SERVER_ADDRESS=${{secrets.SERVER_ADDRESS}} >> app.env
          echo TOKEN_SYMMETRIC_KEY=${{secrets.TOKEN_SYMMETRIC_KEY}} >> app.env
          echo TOKEN_DURATION=${{secrets.TOKEN_DURATION}} >> app.env
          cat app.env

      - name: Test
        run: go test -v ./...
